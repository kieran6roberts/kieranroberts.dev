---
import { Icon } from 'astro-icon/components';
import ActionItem from '@shared/components/base/ActionItem.astro';
---

<script>
	import { Themes, THEME_STORAGE_KEY } from '@config/consts';
	import type { Theme } from '@shared/types';
	document.addEventListener('astro:page-load', () => {
		const button = document.getElementById('theme-toggle');

		const theme = (() => {
			if (typeof localStorage !== 'undefined' && localStorage.getItem(THEME_STORAGE_KEY)) {
				return (localStorage.getItem(THEME_STORAGE_KEY) as Theme) || Themes.light;
			}
			return window.matchMedia('(prefers-color-scheme: dark)').matches ? Themes.dark : Themes.light;
		})();

		const reflectThemePreference = (theme: Theme) => {
			document.documentElement.className = '';
			document.documentElement.classList.add(theme);
			button?.setAttribute('aria-label', `${theme} theme`);
		};

		reflectThemePreference(theme);
		window.localStorage.setItem(THEME_STORAGE_KEY, theme);

		const handleToggleClick = () => {
			const element = document.documentElement;
			const newTheme = element.classList.contains('dark') ? Themes.light : Themes.dark;
			reflectThemePreference(newTheme);
			localStorage.setItem(THEME_STORAGE_KEY, newTheme);
		};

		button?.addEventListener('click', handleToggleClick);
	});
</script>

<ActionItem
	id="theme-toggle"
	title="Toggles light & dark theme"
	aria-live="polite"
	class="group outline-accent-darkest dark:outline-accent-brightest dark:hover:outline-offset-zinc-900 flex items-center justify-center rounded-full p-1.5 outline-offset-0 transition-all duration-300 hover:outline-3 hover:outline-offset-2 dark:hover:outline-offset-2"
>
	<span
		class="block text-zinc-900 transition-transform duration-400 ease-in-out group-hover:-rotate-90 dark:text-zinc-50"
	>
		<Icon name="sun" class="block dark:hidden" width="24" height="24" />
		<Icon name="moon" class="hidden dark:block" width="24" height="24" />
	</span>
</ActionItem>
