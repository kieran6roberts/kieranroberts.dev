---
import { ViewTransitions } from "astro:transitions";
import "../styles/main.css";

interface Props {
  title?: string;
  description?: string;
  url?: string;
}

const DEFAULT_TITLE = "Kieran Roberts | Software Developer";
const DEFAULT_DESCRIPTION =
  "Hi, I'm a React & TypeScript focused web developer with multiple years worth of industry experience. Let's talk";
const DEFAULT_URL = "kieranroberts.dev";

const {
  title = DEFAULT_TITLE,
  description = DEFAULT_DESCRIPTION,
  url = DEFAULT_URL,
} = Astro.props;

const isProd = import.meta.env.PROD;
---

<head>
  <meta charset="UTF-8" />
  <meta
    name="viewport"
    content="width=device-width, initial-scale=1, shrink-to-fit=no"
  />
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
  <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
  <meta name="generator" content={Astro.generator} />
  <meta name="theme-color" content="#ffffff" />
  <meta name="msapplication-TileColor" content="#ffffff" />

  <meta name="description" content={description} />

  <!-- Facebook Meta Tags -->
  <meta property="og:title" content={title} />
  <meta property="og:image" content="/ogImage.png" />
  <meta property="og:url" content={url} />
  <meta property="og:site_name" content="kieranroberts.dev" />
  <meta property="og:description" content={description} />
  <meta property="og:type" content="website" />

  <!-- Twitter Meta Tags -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:creator" content="Kieran6dev" />
  <meta property="twitter:domain" content="kieranroberts.dev" />
  <meta property="twitter:url" content={url} />
  <meta name="twitter:image" content="/ogImage.png" />

  <link rel="sitemap" href="/sitemap-index.xml" />

  <link
    rel="alternate"
    type="application/rss+xml"
    title={title}
    href={`${Astro.site}/blog/rss.xml`}
  />

  <title>{title}</title>

  {/* Page transition animations */}
  <ViewTransitions transition:animate="slide" />

  {/* Fonts */}
  <link
    rel="preload"
    href="/fonts/junegull.woff"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/Quicksand-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  <link
    rel="preload"
    href="/fonts/Quicksand-Medium.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />

  <script is:inline>
    // Necessary for view transitions
    document.addEventListener("astro:after-swap", () => {
      if (
        localStorage.theme === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.className = "";
        document.documentElement.classList.add("dark");
        document.documentElement.dataset.theme = "rose-pine-moon";
        document
          .querySelector("#theme-toggle")
          ?.setAttribute("aria-label", "dark");
      } else {
        document.documentElement.dataset.theme = "slack-ochin";
      }
    });
    if (
      localStorage.theme === "dark" ||
      (!("theme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
    ) {
      document.documentElement.className = "";
      document.documentElement.classList.add("dark");
      document.documentElement.dataset.theme = "rose-pine-moon";
      document
        .querySelector("#theme-toggle")
        ?.setAttribute("aria-label", "dark");
    } else {
      document.documentElement.dataset.theme = "slack-ochin";
    }
  </script>

  {
    isProd ? (
      <script
        is:inline
        data-domain="kieranroberts.dev"
        data-api="/discover/api/event"
        src="/discover/js/discover.js"
      />
    ) : null
  }
</head>
