---
import { getCollection, render, getEntries } from 'astro:content';
import { Image } from 'astro:assets';
import Layout from '@shared/layouts/Layout.astro';
import Prose from '@features/blog/components/Prose.astro';
import Toc from '@features/blog/components/Toc.astro';
import BlogCard from '@features/blog/components/BlogCard.astro';
import Button from '@shared/components/base/Button.astro';
import { Icon } from 'astro-icon/components';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.id },
		props: { post },
	}));
}

const { post } = Astro.props;
const { Content, headings } = await render(post);
const relatedPosts = await getEntries(post.data.relatedPosts);
const formattedDate = new Date(post.data.datePublished).toLocaleDateString('en-US', {
	year: 'numeric',
	month: 'long',
	day: 'numeric',
});
---

<Layout title={post.data.title} description={post.data.seoDescription}>
	<div
		class="from-accent-brightest to-accent-bright dark:from-accent-darkest dark:to-accent-dark absolute inset-0 z-0 h-[50px] border-b border-zinc-200 bg-gradient-to-r dark:border-zinc-800"
	>
	</div>
	<div class="mt-16 flex gap-8 pb-24 xl:items-start xl:justify-center 2xl:gap-16">
		<Button as="a" data-astro-reload href="/blog" size="sm" class="sticky top-24 hidden xl:flex">
			<Icon
				name="arrow-left"
				width={12}
				height={12}
				class="stroke-current transition-transform duration-200 group-hover:-translate-x-1"
			/>
			Back to posts
		</Button>
		<div class="mx-auto flex max-w-screen-md flex-col items-center gap-8 px-4 xl:mx-0">
			{
				post.data.cover ? (
					<Image
						src={post.data.cover}
						alt="Blog Post Cover Image"
						class="h-auto w-full rounded-lg"
						width={600}
						height={400}
						loading="eager"
						transition:name={`cover-${post.data.slug}`}
					/>
				) : null
			}
			<h1
				class="text-center text-3xl font-semibold xl:text-5xl"
				transition:name={`title-${post.data.slug}`}
			>
				{post.data.title}
			</h1>
			<time
				class="text-lg text-zinc-600 dark:text-zinc-400"
				transition:name={`date-${post.data.slug}`}
			>
				{formattedDate}
			</time>
			<div class="mx-auto h-px w-2/3 bg-zinc-200 dark:bg-zinc-800"></div>
			<Prose>
				<Content />
			</Prose>
			<section class="mt-16 flex flex-col items-center gap-8">
				<h2 class="text-center text-2xl font-semibold">More posts you might like</h2>
				<div class="grid grid-cols-1 gap-4 md:grid-cols-2">
					{
						relatedPosts.map((post) => (
							<BlogCard
								title={post.data.title}
								description={post.data.seoDescription}
								date={post.data.datePublished.toISOString()}
								link={post.data.slug}
								image={post.data.cover || ''}
								transitionName={`cover-${post.data.slug}`}
							/>
						))
					}
				</div>
			</section>
		</div>

		<Toc {headings} />
	</div>
</Layout>
